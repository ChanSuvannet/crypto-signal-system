# ============================================
# CRYPTO TRADING SIGNAL SYSTEM
# Environment Variables Template
# ============================================

# Copy this file to .env and fill in your values
# cp .env.example .env

# ==================== GENERAL ====================
NODE_ENV=production
APP_NAME=Crypto Signal System
APP_URL=http://localhost
LOG_LEVEL=info

# ==================== DATABASE ====================

# MySQL
MYSQL_ROOT_PASSWORD=your_secure_root_password_change_this
MYSQL_DATABASE=crypto_trading_bot
MYSQL_USER=crypto_user
MYSQL_PASSWORD=your_secure_mysql_password_change_this

# TimescaleDB (PostgreSQL)
TIMESCALE_DB=crypto_timeseries
TIMESCALE_USER=timescale_user
TIMESCALE_PASSWORD=your_secure_timescale_password_change_this

# MongoDB
MONGO_DATABASE=crypto_ml_models
MONGO_USER=mongo_user
MONGO_PASSWORD=your_secure_mongo_password_change_this

# ==================== CACHE & MESSAGE QUEUE ====================

# Redis (no password by default, configure in redis.conf if needed)
REDIS_PASSWORD=

# RabbitMQ
RABBITMQ_USER=rabbitmq_user
RABBITMQ_PASSWORD=your_secure_rabbitmq_password_change_this

# ==================== API GATEWAY ====================

# JWT Authentication
JWT_SECRET=your_super_secret_jwt_key_change_this_to_random_string
JWT_EXPIRATION=7d

# CORS
CORS_ORIGIN=http://localhost:3001

# Rate Limiting
RATE_LIMIT_WINDOW=15m
RATE_LIMIT_MAX=100

# ==================== EXCHANGE APIs ====================

# Binance
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_API_SECRET=your_binance_api_secret_here
BINANCE_TESTNET=false

# Coinbase (Optional)
COINBASE_API_KEY=
COINBASE_API_SECRET=

# Kraken (Optional)
KRAKEN_API_KEY=
KRAKEN_API_SECRET=

# ==================== NEWS APIs ====================

# NewsAPI.org
NEWSAPI_KEY=your_newsapi_key_here

# CryptoPanic
CRYPTOPANIC_API_KEY=your_cryptopanic_api_key_here

# Twitter API (Optional)
TWITTER_API_KEY=
TWITTER_API_SECRET=
TWITTER_BEARER_TOKEN=

# Reddit API (Optional)
REDDIT_CLIENT_ID=
REDDIT_CLIENT_SECRET=

# ==================== NOTIFICATION CHANNELS ====================

# Telegram Bot
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
TELEGRAM_CHAT_ID=your_telegram_chat_id_here

# Discord Webhook
DISCORD_WEBHOOK_URL=your_discord_webhook_url_here

# Email (SMTP)
EMAIL_SMTP_HOST=smtp.gmail.com
EMAIL_SMTP_PORT=587
EMAIL_USER=your_email@gmail.com
EMAIL_PASSWORD=your_email_app_password_here
EMAIL_FROM=Crypto Signal Bot <noreply@cryptosignal.com>
EMAIL_TO=your_notification_email@example.com

# SMS (Twilio - Optional)
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
TWILIO_PHONE_NUMBER=
TWILIO_TO_PHONE_NUMBER=

# ==================== MACHINE LEARNING ====================

# Hugging Face (for NLP models)
HUGGINGFACE_TOKEN=your_huggingface_token_here

# ML Training Configuration
ML_TRAINING_INTERVAL=86400  # Seconds (86400 = daily)
ML_AUTO_RETRAIN=true
ML_MODEL_PATH=/app/models

# ==================== BOT CONFIGURATION ====================

# Symbols to trade (comma-separated)
CRYPTO_SYMBOLS=BTC/USDT,ETH/USDT,SOL/USDT,BNB/USDT,XRP/USDT

# Collection intervals (seconds)
DATA_COLLECTION_INTERVAL=60
NEWS_COLLECTION_INTERVAL=300
TECH_ANALYSIS_INTERVAL=60
SENTIMENT_ANALYSIS_INTERVAL=300
ITC_ANALYSIS_INTERVAL=300

# Timeframes for analysis
TIMEFRAMES=1h,4h,1d

# Signal validation thresholds
MIN_RR_RATIO=4.0
MIN_CONFIDENCE=60
MIN_WIN_RATE=60

# Position sizing
DEFAULT_RISK_PERCENTAGE=1.0
MAX_POSITION_SIZE=5000

# ==================== FRONTEND ====================

# Vue.js Environment
VITE_API_URL=http://localhost:3000
VITE_WS_URL=ws://localhost:3000
VITE_APP_NAME=Crypto Signal System
VITE_APP_VERSION=1.0.0

# ==================== MONITORING ====================

# Grafana
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin_change_this

# Prometheus
PROMETHEUS_RETENTION=15d

# ==================== BACKUP ====================

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_INTERVAL=daily
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=
BACKUP_S3_ACCESS_KEY=
BACKUP_S3_SECRET_KEY=

# ==================== SECURITY ====================

# SSL/TLS (for production)
SSL_ENABLED=false
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# API Security
API_KEY_ENCRYPTION_KEY=your_api_key_encryption_key_change_this

# ==================== PERFORMANCE ====================

# Connection Pools
DB_POOL_MIN=2
DB_POOL_MAX=10

# Cache TTL (seconds)
CACHE_TTL_SIGNALS=300
CACHE_TTL_NEWS=600
CACHE_TTL_PERFORMANCE=3600

# Worker Threads
WORKER_THREADS=4

# ==================== DEVELOPMENT ====================

# Debug Mode
DEBUG=false
VERBOSE_LOGGING=false

# Mock APIs (for testing without real API keys)
USE_MOCK_BINANCE=false
USE_MOCK_NEWS=false

# Seed Database (for development)
SEED_DATABASE=false
SEED_DATA_PATH=./database/seeds

# ==================== FEATURE FLAGS ====================

# Enable/Disable Bots
ENABLE_MARKET_DATA_BOT=true
ENABLE_NEWS_COLLECTOR_BOT=true
ENABLE_TECHNICAL_BOT=true
ENABLE_SENTIMENT_BOT=true
ENABLE_ITC_BOT=true
ENABLE_PATTERN_BOT=true
ENABLE_SIGNAL_AGGREGATOR=true
ENABLE_ML_ENGINE=true
ENABLE_NOTIFICATION_BOT=true
ENABLE_FEEDBACK_PROCESSOR=true

# Advanced Features
ENABLE_MULTI_TIMEFRAME=true
ENABLE_CORRELATION_ANALYSIS=true
ENABLE_MARKET_REGIME_DETECTION=true
ENABLE_AB_TESTING=true
ENABLE_AUTO_LEARNING=true

# ==================== EXPERIMENTAL ====================

# Experimental Features (use with caution)
ENABLE_EXPERIMENTAL_MODELS=false
ENABLE_GPU_ACCELERATION=false
ENABLE_DISTRIBUTED_TRAINING=false

# ==================== NOTES ====================
# 
# IMPORTANT SECURITY REMINDERS:
# 1. NEVER commit this file with real credentials to version control
# 2. Keep .env in .gitignore
# 3. Use strong, unique passwords for all services
# 4. Rotate API keys regularly
# 5. Use environment-specific files (.env.production, .env.staging)
# 6. Consider using secret management tools (Vault, AWS Secrets Manager)
#
# For production deployment:
# - Use stronger passwords (20+ characters, mixed case, numbers, symbols)
# - Enable SSL/TLS
# - Use read replicas for databases
# - Set up proper monitoring and alerting
# - Implement backup strategy
# - Use Docker secrets or Kubernetes secrets instead of .env files